import unittest
import cnyt

class TestStringMethods(unittest.TestCase):

    def test_MarbleExperiment(self):
        mat=[[0,0,0,0,0,0],[0,0,0,0,0,0],[0,1,0,0,0,1],[0,0,0,1,0,0],[0,0,1,0,0,0],[1,0,0,0,1,0]]
        startingState=[6,2,1,5,3,10]
        clicks=1      
        self.assertEqual(cnyt.canicas(mat,clicks,startingState), [0, 0, 12, 5, 1, 9])

    def test_ExperimentoRendijas(self):     
        self.assertEqual(cnyt.expRendijas([1/2,1/2],5,2), [[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.5, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.5, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.3, 0.3, 1.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.3, 0.0, 1.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.3, 0.0, 0.0, 1.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0]])

    def test_ExperimentoRendijasCuanticas(self):     
        self.assertEqual(cnyt.expCuanticoRendijas([(1/(2**(1/2)),0),(1/(2**(1/2)),0)],5,2), [[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.5, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.5, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.3, 0.3, 1.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.3, 0.0, 1.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.3, 0.0, 0.0, 1.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0]])    
    
if __name__ == '__main__':
    unittest.main()
